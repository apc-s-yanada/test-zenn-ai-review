# .github/workflows/ai-review.yml

name: AI Review by OpenAI

on:
  pull_request:
    types: [opened, synchronize] # プルリクエストが作成/更新された時に実行

permissions:
  pull-requests: write # プルリクエストにコメントを書き込むために必要

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      # 1. リポジトリのコードをチェックアウト
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 変更があった行（追加された行のみ）をファイルに保存
      - name: Get added lines from diff and save to file
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff origin/${{ github.base_ref }}...HEAD --unified=0 | grep '^+' | sed 's/^+//' | grep -v '^++' > diff.txt

      # 3. 【安全装置】差分の文字数をチェック
      - name: Check diff size
        id: check_size
        run: |
          CHAR_COUNT=$(wc -m < diff.txt)
          LIMIT=15000
          echo "Character count: $CHAR_COUNT"
          if [ "$CHAR_COUNT" -gt "$LIMIT" ]; then
            echo "is_too_large=true" >> $GITHUB_OUTPUT
          else
            echo "is_too_large=false" >> $GITHUB_OUTPUT
          fi

      # 4. (差分が小さい場合のみ) AI APIを呼び出してレビューを依頼
      - name: Call OpenAI API for Review
        id: openai_review
        if: steps.check_size.outputs.is_too_large == 'false'
        run: |
          PROMPT_TEMPLATE="あなたは優秀な日本語テクニカルエディターです。
          以下にGitの差分から抽出した「追加された行」だけを提示します。これらの新しく追加された行について、レビューを行い、フィードバックをしてください。
          # レビュー観点
          - 誤字脱字や文法的な誤り
          - 不自然な日本語の表現
          - 表記ゆれ
          - 技術用語の不適切な使用
          # 出力形式
          - 指摘事項がない場合は、「レビューの結果、問題は見つかりませんでした。」とだけ出力してください。
          - 指摘事項がある場合は、具体的な修正案を箇条書きで簡潔に示してください。
          # 今回追加された行
          "
          
          API_RESPONSE=$(jq -n \
            --arg model "gpt-4o" \
            --arg prompt_template "$PROMPT_TEMPLATE" \
            --rawfile diff_content diff.txt \
            '{
              "model": $model,
              "messages": [
                {
                  "role": "user",
                  "content": ($prompt_template + $diff_content)
                }
              ]
            }' | curl -s -X POST "https://api.openai.com/v1/chat/completions" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
              -d @-)
          
          echo "--- OpenAI API Response ---"
          echo "$API_RESPONSE"
          echo "--------------------------"
          
          REVIEW_COMMENT=$(echo "$API_RESPONSE" | jq -r '.choices[0].message.content')
          echo "comment<<EOF" >> $GITHUB_OUTPUT
          echo "$REVIEW_COMMENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 5. レビュー結果、または警告メッセージをプルリクエストにコメントとして投稿 (最終版)
      - name: Post Comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          if [ "${{ steps.check_size.outputs.is_too_large }}" == "true" ]; then
            COMMENT_BODY="### ⚠️ AIレビューのスキップ
            今回のコミットの差分が大きすぎるため（15,000文字以上）、AIによるレビューをスキップしました。
            記事をいくつかのセクションに分け、コミットを分割して再度プッシュしてください。"
          else
            # AIレビュー結果を変数に格納 (ghコマンドのエラー対策)
            COMMENT_BODY_FROM_AI="${{ steps.openai_review.outputs.comment }}"
            COMMENT_BODY="### 🤖 AIによるレビュー結果
            $COMMENT_BODY_FROM_AI"
          fi
          
          # ghコマンドを使って安全にコメントを投稿する
          gh pr comment $PR_NUMBER --body "$COMMENT_BODY"
