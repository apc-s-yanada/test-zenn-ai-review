# .github/workflows/ai-review.yml

name: AI Review by OpenAI

on:
  pull_request:
    types: [opened, synchronize] # プルリクエストが作成/更新された時に実行

permissions:
  pull-requests: write # プルリクエストにコメントを書き込むために必要

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      # 1. リポジトリのコードをチェックアウト
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 変更があった行（追加された行のみ）をファイルに保存
      - name: Get added lines from diff and save to file
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff origin/${{ github.base_ref }}...HEAD --unified=0 | grep '^+' | sed 's/^+//' | grep -v '^++' > diff.txt

      # 3. 【安全装置】差分の文字数をチェック
      - name: Check diff size
        id: check_size
        run: |
          CHAR_COUNT=$(wc -m < diff.txt)
          LIMIT=15000
          echo "Character count: $CHAR_COUNT"
          if [ "$CHAR_COUNT" -gt "$LIMIT" ]; then
            echo "is_too_large=true" >> $GITHUB_OUTPUT
          else
            echo "is_too_large=false" >> $GITHUB_OUTPUT
          fi

      # 4. (差分が小さい場合のみ) AI APIを呼び出してブログを評価
      - name: Call OpenAI API for Blog Evaluation
        id: openai_review
        if: steps.check_size.outputs.is_too_large == 'false'
        run: |
          # あなたが作成したブログ評価プロンプト
          PROMPT_TEMPLATE="あなたはプロのテックブロガー兼編集者です。
          以下に提示するブログ記事のドラフト（新しく追加された行）を、下記の評価基準に基づいて厳格に評価してください。

          # 評価方法
          1. 記事がどのカテゴリに最も当てはまるか、1つ以上選んでください（重複あり）。
          2. 全般共通評価軸とカテゴリごと評価軸を考慮し、10段階でスコアを付けてください。
          3. なぜそのスコアになったのか、具体的な理由を挙げてください。
          4. スコアを上げるためにはどうすれば良いか、改善点を提案してください。

          # 出力形式の例
          カテゴリ3に属する、スコアは3点、理由はXXXX、スコアを上げるにはXXXが必要

          # 全般共通評価軸
          ## 加点ポイント
          - 趣旨が明確であること
          - ペルソナが明確であること
          - 人を引き付けるキャッチーな題名であること
          - 起承転結があり読みやすいこと
          - 自分なりの独自の視点・考え・設計・手法・解釈など考察が入っていること
          ## 減点ポイント
          - タイポがある
          - 文法が間違っている
          - 引用などのAPCガイドラインが守られていない
          - 文章として読みづらい

          # カテゴリごと評価軸
          - カテゴリ１：海外(最新)の情報をインプットをもとにアウトプット（リリース速報系、こんな技術が出てきた系）
            - スコア指標：情報の希少性、先端性、ピックアップの仕方
          - カテゴリ２：インプットした情報で実際に触って試してみる（やってみた系）
            - スコア指標：組み合わせの複雑度や先進性
          - カテゴリ３：自分の経験、ノウハウ、事例などをアウトプアウト（事例やノウハウ紹介）
            - スコア指標：挑戦やシチュエーションの難易度
          - カテゴリ４：現在の技術の発展とマーケットからマクロに未来を予想・発想する（未来考察）
            - スコア指標：未来予想の解像度、リーゾニング、発想の独自性
          - カテゴリ５：論文のレベル、学会で通用する
            - スコア指標：一般的な論文の評価軸と同様
          - カテゴリ６：未来の技術やソフトウェアそのものを開発してしまって結果をアウトプット
            - スコア指標：社会的インパクトの大きさ

          ---
          # 評価対象のブログ記事ドラフト（今回追加された行）
          "
          
          API_RESPONSE=$(jq -n \
            --arg model "gpt-4o" \
            --arg prompt_template "$PROMPT_TEMPLATE" \
            --rawfile diff_content diff.txt \
            '{
              "model": $model,
              "messages": [
                {
                  "role": "user",
                  "content": ($prompt_template + $diff_content)
                }
              ]
            }' | curl -s -X POST "https://api.openai.com/v1/chat/completions" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
              -d @-)
          
          echo "--- OpenAI API Response ---"
          echo "$API_RESPONSE"
          echo "--------------------------"
          
          REVIEW_COMMENT=$(echo "$API_RESPONSE" | jq -r '.choices[0].message.content')
          echo "comment<<EOF" >> $GITHUB_OUTPUT
          echo "$REVIEW_COMMENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # 5. 評価結果、または警告メッセージをプルリクエストにコメントとして投稿
      - name: Post Comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          if [ "${{ steps.check_size.outputs.is_too_large }}" == "true" ]; then
            COMMENT_BODY="### ⚠️ AIレビューのスキップ
            今回のコミットの差分が大きすぎるため（15,000文字以上）、AIによるレビューをスキップしました。
            記事をいくつかのセクションに分け、コミットを分割して再度プッシュしてください。"
          else
            COMMENT_BODY_FROM_AI="${{ steps.openai_review.outputs.comment }}"
            COMMENT_BODY="### 🤖 AIによるブログ評価
            $COMMENT_BODY_FROM_AI"
          fi
          
          gh pr comment $PR_NUMBER --body "$COMMENT_BODY"
